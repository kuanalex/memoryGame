{"version":3,"sources":["GlobalStyle.js","assets/logo.png","components/Header.js","components/Score/Score.js","components/Cards/Card.js","components/Cards/Grid.js","utils.js","components/Main.js","components/Footer.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","HeaderWrapper","styled","header","Logo","img","Line","div","Circle","props","size","borderWidth","Header","src","logo","alt","ScoreboardWrapper","Score","CurrentScore","BestScore","Scoreboard","currentScore","bestScore","CardWrapper","Image","Name","p","Card","pokemon","handleCardClick","onClick","image","name","CardsGridWrapper","CardsGrid","pokemons","pokemonCards","map","id","shuffleArray","array","sort","Math","random","MainWrapper","main","Main","useState","setPokemons","clickedPokemons","setClickedPokemons","setCurrentScore","setBestScore","useEffect","a","fetchPokemons","loadCards","amount","i","pokemonUrl","fetch","response","json","string","charAt","toUpperCase","slice","sprites","front_default","push","playRound","pokemonName","includes","resetGame","newScore","prevState","e","target","parentNode","lastChild","textContent","FooterWrapper","footer","Link","Footer","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6cf59f4.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    word-wrap: break-word;\n  }\n  html {\n    font-size: 62.5%;\n    line-height: 1.6;\n    /* Footer support */\n    position: relative;\n    min-height: 100%;\n  }\n  body {\n    font-family: \"Nunito\", sans-serif;\n    font-size: 1.6rem;\n    background-color: #ccc;\n    color: #333;\n  }\n  header {\n    font-size: 2.4rem;\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    line-height: 1.2;\n  }\n  a {\n    text-decoration: none;\n  }\n  img {\n    display: block;\n    width: 100%;\n  }\n  button,\n  input, \n  textarea {\n    border: none;\n    outline: none;\n    color: inherit;\n    font-family: inherit;\n    font-size: inherit;\n  }\n  button {\n    cursor: pointer;\n  }\n`;\n\nexport default GlobalStyle;","export default __webpack_public_path__ + \"static/media/logo.7b7dc5ed.png\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport logo from \"../assets/logo.png\";\n\n\n\nconst Header = () => {\n  return (\n    <>\n    <HeaderWrapper>\n      <Logo src={logo} alt=\"logo\"></Logo>\n    </HeaderWrapper>\n\n    <Line>\n      <Circle size=\"60px\" borderWidth=\"6px\">\n        <Circle size=\"40px\" borderWidth=\"4px\"></Circle>\n      </Circle>\n    </Line>\n    </>\n  );\n};\n\nconst HeaderWrapper = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 2rem;\n  background-color: #ef0e3d\n`\n\nconst Logo = styled.img`\n  max-width: 700px;\n`\n\nconst Line = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 20px;\n  background-color: #383838;\n`\n\nconst Circle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: ${(props) => props.size};\n  width: ${(props) => props.size};\n  border: ${(props) => props.borderWidth} solid #383838;\n  border-radius: 50%;\n  background-color: #eee;\n`\n\nexport default Header;","import React from 'react'\nimport styled from 'styled-components'\n\nconst Scoreboard = ({ currentScore, bestScore }) => {\n  return (\n    <ScoreboardWrapper>\n      <CurrentScore>Current score: {currentScore}</CurrentScore>\n      <BestScore>Best score: {bestScore}</BestScore>\n    </ScoreboardWrapper>\n  )\n}\n\nconst ScoreboardWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  width: 69rem;\n  @media (max-width: 750px) {\n    flex-direction: column;\n    width: 250px;\n    gap: 3rem;\n  }\n`\n\nconst Score = styled.div`\n  padding: 0.5rem;\n  width: 35%;\n  font-size: 2rem;\n  border-radius: 20px;\n  font-weight: 700;\n  text-align: center;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  @media (max-width: 750px) {\n    width: 100%;\n  }\n`\n\nconst CurrentScore = styled(Score)`\n  background-color: #ffb5b5;\n`\n\nconst BestScore = styled(Score)`\n  background-color: #b5ffb5;\n`\n\nexport default Scoreboard","import React from 'react'\nimport styled from 'styled-components'\n\nconst Card = ({ pokemon, handleCardClick }) => {\n  return (\n    <CardWrapper onClick={handleCardClick}>\n      <Image src={pokemon.image} alt={pokemon.name} />\n      <Name>{pokemon.name}</Name>\n    </CardWrapper>\n  )\n}\n\nconst CardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 150px;\n  border-radius: 20px;\n  background-color: #eee;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  transition: transform 0.3s;\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.1);\n  }\n`\n\nconst Image = styled.img`\n  padding: 0rem;\n  border-top-left-radius: 20px;\n  border-top-right-radius: 20px;\n`\n\nconst Name = styled.p`\n  padding: 0rem;\n  font-size: 2rem;\n  font-weight: 700;\n  text-align: center;\n`\n\nexport default Card","import React from 'react'\nimport styled from 'styled-components'\nimport Card from './Card'\n\nconst CardsGrid = ({ pokemons, handleCardClick }) => {\n  const pokemonCards = pokemons.map((pokemon) => (\n    <Card key={pokemon.id} pokemon={pokemon} handleCardClick={handleCardClick}/>\n  ))\n\n  return <CardsGridWrapper>{pokemonCards}</CardsGridWrapper>\n}\n\nconst CardsGridWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 3rem;\n  @media (max-width: 750px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n  @media (max-width: 550px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`\n\nexport default CardsGrid","export const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n  }\n  \n  export const shuffleArray = (array) => {\n    return [...array].sort(() => Math.random() - 0.5)\n  }","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport Scoreboard from './Score/Score'\nimport CardsGrid from './Cards/Grid'\nimport { capitalizeFirstLetter, shuffleArray } from '../utils'\n\nconst Main = () => {\n  const POKEMONS_AMOUNT = 20\n  const [pokemons, setPokemons] = useState([])\n  const [clickedPokemons, setClickedPokemons] = useState([])\n  const [currentScore, setCurrentScore] = useState(0)\n  const [bestScore, setBestScore] = useState(0)\n\n  useEffect(() => {\n    const loadCards = async () => {\n      setPokemons(shuffleArray(await fetchPokemons(POKEMONS_AMOUNT)))\n    }\n\n    loadCards()\n  }, [])\n\n  const fetchPokemons = async (amount) => {\n    const pokemons = []\n\n    for (let i = 1; i <= amount; i++) {\n      const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${i}`\n      const response = await fetch(pokemonUrl)\n      const pokemon = await response.json()\n      const id = pokemon.id\n      const name = capitalizeFirstLetter(pokemon.name)\n      const image = pokemon.sprites.front_default\n      pokemons.push({ id, name, image })\n    }\n\n    return pokemons\n  }\n\n  const handleCardClick = (e) => {\n    const pokemonName = e.target.parentNode.lastChild.textContent\n    playRound(pokemonName)\n    setPokemons(shuffleArray(pokemons))\n  }\n\n  const playRound = (pokemonName) => {\n    if (clickedPokemons.includes(pokemonName)) {\n      resetGame()\n    } else {\n      const newScore = currentScore + 1\n      if (newScore > bestScore) setBestScore(newScore)\n      setCurrentScore(newScore)\n      setClickedPokemons((prevState) => [...prevState, pokemonName])\n    }\n  }\n\n  const resetGame = () => {\n    setClickedPokemons([])\n    setCurrentScore(0)\n  }\n\n  return (\n    <MainWrapper>\n      <Scoreboard\n        currentScore={currentScore}\n        bestScore={bestScore}\n      ></Scoreboard>\n      <CardsGrid\n        pokemons={pokemons}\n        handleCardClick={handleCardClick}\n      ></CardsGrid>\n    </MainWrapper>\n  )\n}\n\nconst MainWrapper = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 4rem;\n  padding: 4rem;\n  margin-bottom: 3.5rem;\n`\n\nexport default Main","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FaGithub } from \"react-icons/fa\";\n\nconst Footer = () => {\n  return (\n    <FooterWrapper>\n      <p>kuanalex</p>\n      <Link href=\"https://github.com/kuanalex\" target=\"_blank\">\n        <FaGithub />\n      </Link>\n    </FooterWrapper>\n  );\n};\n\nconst FooterWrapper = styled.footer`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 0.5rem;\n  background-color: #383838;\n  color: #ffffff;\n`;\n\nconst Link = styled.a`\n  position: relative;\n  top: 0.2rem;\n  margin-left: 1rem;\n  color: #ccc;\n  font-size: 2rem;\n  &:hover {\n    color: #ffffff;\n  }\n  &:active {\n    color: #ffffff;\n  }\n`;\n\nexport default Footer;","import React from 'react'\nimport Header from './components/Header'\nimport Main from './components/Main'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <Main/>\n      <Footer />\n    </>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GlobalStyle from \"./GlobalStyle\";\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}